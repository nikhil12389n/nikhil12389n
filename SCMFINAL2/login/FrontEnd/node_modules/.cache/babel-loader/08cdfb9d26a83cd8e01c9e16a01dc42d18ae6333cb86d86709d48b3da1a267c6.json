{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\DDSTR\\\\ReceivedReq.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ConnectMetamask from \"../ADSTR/ConnectMetamask\";\nimport ConnectContractSR from \"./ConnectContractSR\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DIVISIONReceivedReq() {\n  _s();\n  const [res, setRes] = useState([]);\n  ConnectMetamask();\n  ConnectContractSR();\n  useEffect(() => {\n    const fetchdata = async () => {\n      let res = await window.contract.methods.getallreqreceivedddst(localStorage.getItem(\"ROLENAME\")).call();\n      let res2 = await window.contract1.methods.getallreqreceivedddst(localStorage.getItem(\"ROLENAME\")).call();\n      let updated = [...res];\n      for (let i = 0; i < res2.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (updated[j].reqno === res2[i].reqno && updated[j].from === res2[i].from) {\n            updated[j] = res2[i];\n          }\n        }\n      }\n      if (updated.length === 0) {\n        updated = [...res2];\n      }\n      setRes(updated);\n      console.log();\n      for (let i = 0; i < updated.length; i++) {\n        if (updated[i].reqfrom.length === 7) {\n          if (updated[i].acceptedby === \"No supplies in units\") {\n            // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"NA\",'sentasc':\"<button class='btn btn-dark send-dgst'>Send to DGST</button>\"}).draw();\n          }\n          if (updated[i].status === \"pending\") {\n            // console.log(\"HI\");\n            // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-adsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\n          }\n        } else {\n          if (updated[i].status === \"pending\") {\n            // console.log(updated[i].reqfrom);\n            // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-alladsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\n          }\n        }\n      }\n    };\n    fetchdata();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"myTable\",\n      children: [res, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(DIVISIONReceivedReq, \"JHicEwtYZXxnb1oyf1SP5sp0KCE=\");\n_c = DIVISIONReceivedReq;\nvar _c;\n$RefreshReg$(_c, \"DIVISIONReceivedReq\");","map":{"version":3,"names":["React","useState","useEffect","ConnectMetamask","ConnectContractSR","jsxDEV","_jsxDEV","Fragment","_Fragment","DIVISIONReceivedReq","_s","res","setRes","fetchdata","window","contract","methods","getallreqreceivedddst","localStorage","getItem","call","res2","contract1","updated","i","length","j","reqno","from","console","log","reqfrom","acceptedby","status","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/DDSTR/ReceivedReq.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ConnectMetamask from \"../ADSTR/ConnectMetamask\";\r\nimport ConnectContractSR from \"./ConnectContractSR\";\r\n\r\nexport default function DIVISIONReceivedReq() {\r\n    const [res, setRes] = useState([]);\r\n    ConnectMetamask();\r\n    ConnectContractSR();\r\n    useEffect(() => {\r\n        const fetchdata = async () => {\r\n            let res = await window.contract.methods\r\n                .getallreqreceivedddst(localStorage.getItem(\"ROLENAME\"))\r\n                .call();\r\n\r\n            let res2 = await window.contract1.methods\r\n                .getallreqreceivedddst(localStorage.getItem(\"ROLENAME\"))\r\n                .call();\r\n\r\n            let updated = [...res];\r\n            for (let i = 0; i < res2.length; i++) {\r\n                for (let j = 0; j < updated.length; j++) {\r\n                    if (\r\n                        updated[j].reqno === res2[i].reqno &&\r\n                        updated[j].from === res2[i].from\r\n                    ) {\r\n                        updated[j] = res2[i];\r\n                    }\r\n                }\r\n            }\r\n            if (updated.length === 0) {\r\n                updated = [...res2];\r\n            }\r\n\r\n            setRes(updated);\r\n            console.log();\r\n            for (let i = 0; i < updated.length; i++) {\r\n                if (updated[i].reqfrom.length === 7) {\r\n                    if (updated[i].acceptedby === \"No supplies in units\") {\r\n                        // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"NA\",'sentasc':\"<button class='btn btn-dark send-dgst'>Send to DGST</button>\"}).draw();\r\n                    }\r\n\r\n                    if (updated[i].status === \"pending\") {\r\n                        // console.log(\"HI\");\r\n                        // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-adsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\r\n                    }\r\n                } else {\r\n                    if (updated[i].status === \"pending\") {\r\n                        // console.log(updated[i].reqfrom);\r\n                        // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-alladsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        fetchdata();\r\n    });\r\n    return (\r\n        <>\r\n            <div className=\"container\" id=\"myTable\">\r\n                {res};\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}