{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\DDSTR\\\\ReceivedReq.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ConnectMetamask from '../ADSTR/ConnectMetamask';\nimport ConnectContractSR from './ConnectContractSR';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DIVISIONReceivedReq() {\n  _s();\n  const [res, setRes] = useState([]);\n  ConnectMetamask();\n  ConnectContractSR();\n  useEffect(() => {\n    const fetchdata = async () => {\n      let res = await window.contract.methods.getallreqreceivedddst(localStorage.getItem(\"ROLENAME\")).call();\n      let res2 = await window.contract1.methods.getallreqreceivedddst(localStorage.getItem(\"ROLENAME\")).call();\n      console.log(res, res2);\n      let updated = [...res];\n      for (let i = 0; i < res2.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (updated[j].reqno === res2[i].reqno && updated[j].from === res2[i].from) {\n            updated[j] = res2[i];\n          }\n        }\n      }\n      if (updated.length === 0) {\n        updated = [...res2];\n      }\n      setRes(updated);\n      for (let i = 0; i < updated.length; i++) {\n        if (updated[i].reqfrom.length === 7) {\n          if (updated[i].acceptedby === \"No supplies in units\") {\n            // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"NA\",'sentasc':\"<button class='btn btn-dark send-dgst'>Send to DGST</button>\"}).draw();\n          }\n          if (updated[i].status === \"pending\") {\n            console.log(\"HI\");\n            // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-adsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\n          }\n        } else {\n          if (updated[i].status === \"pending\") {\n            console.log(updated[i].reqfrom);\n            // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-alladsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\n          }\n        }\n      }\n    };\n\n    fetchdata();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"myTable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(DIVISIONReceivedReq, \"6hydTdo6YTOYuCALVe27QnAj1z0=\");\n_c = DIVISIONReceivedReq;\nvar _c;\n$RefreshReg$(_c, \"DIVISIONReceivedReq\");","map":{"version":3,"names":["React","useState","useEffect","ConnectMetamask","ConnectContractSR","jsxDEV","_jsxDEV","Fragment","_Fragment","DIVISIONReceivedReq","_s","res","setRes","fetchdata","window","contract","methods","getallreqreceivedddst","localStorage","getItem","call","res2","contract1","console","log","updated","i","length","j","reqno","from","reqfrom","acceptedby","status","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/DDSTR/ReceivedReq.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport ConnectMetamask from '../ADSTR/ConnectMetamask';\r\nimport ConnectContractSR from './ConnectContractSR'\r\n\r\nexport default   function DIVISIONReceivedReq() {\r\n  const [res,setRes]=useState([]);\r\n    ConnectMetamask();\r\n    ConnectContractSR();\r\n    useEffect(()=>{\r\n        const fetchdata=async()=>{\r\n            let res=await window.contract.methods.getallreqreceivedddst(localStorage.getItem(\"ROLENAME\")).call();\r\n\r\n\t\tlet res2=await window.contract1.methods.getallreqreceivedddst(localStorage.getItem(\"ROLENAME\")).call();\r\n         console.log(res,res2);\r\n         let updated=[...res];\r\n         for(let i=0;i<res2.length;i++){\r\n\t\t\t\r\n          for(let j=0;j<updated.length;j++){\r\n          if(updated[j].reqno===res2[i].reqno && updated[j].from===res2[i].from){\r\n            updated[j]=res2[i];\r\n          }\r\n        }\r\n    \r\n        \r\n      }\r\n      if(updated.length===0){\r\n        updated=[...res2];\r\n      }\r\n\r\n      setRes(updated);\r\n     \r\n\r\n  \r\n  \r\n      \r\n         \r\n          for(let i=0;i<updated.length;i++){\r\n            if(updated[i].reqfrom.length===7){\r\n        if(updated[i].acceptedby===\"No supplies in units\"){\r\n          // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"NA\",'sentasc':\"<button class='btn btn-dark send-dgst'>Send to DGST</button>\"}).draw();\r\n        \r\n           }\r\n         \r\n         \r\n        \r\n         if(updated[i].status===\"pending\"){\r\n          console.log(\"HI\");\r\n          // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-adsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\r\n         }\r\n            }\r\n        else{\r\n        if(updated[i].status===\"pending\"){\r\n          console.log(updated[i].reqfrom);\r\n          // table.row.add({'requestno':res[i].reqno,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'sendtoadsts':\"<button class='btn btn-dark send-alladsts'>Send to adsts</button>\",'sentasc':\"NA\"}).draw();\r\n        }\r\n        }\r\n          }\r\n\r\n\r\n        }\r\n        fetchdata();\r\n\r\n    })\r\n  return (\r\n    <>\r\n        <div className='container' id='myTable'>\r\n            \r\n           \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}