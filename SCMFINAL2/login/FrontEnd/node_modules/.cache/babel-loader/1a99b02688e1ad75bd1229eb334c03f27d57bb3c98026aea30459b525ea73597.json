{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\ADSTR\\\\ReceivedReq.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ConnectContractSR from \"./ConnectContractSR\";\nimport ConnectMetamask from \"./ConnectMetamask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReceivedReq() {\n  _s();\n  const [res, setRes] = useState([]);\n  const [ref, setRef] = useState([]);\n  const [ref2, setRef2] = useState([]);\n  const accept = async () => {};\n  const decline = async () => {};\n  const reftask = async i => {\n    setRef();\n  };\n  const ref2task = async i => {\n    setRef2(await window.contract1.methods.getallreqreceivedddst(i).call());\n  };\n  ConnectMetamask();\n  ConnectContractSR();\n  useEffect(() => {\n    const fetchdata = async () => {\n      let res = await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\n      let res2 = await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\n      let updated = [...res];\n      for (let i = 0; i < res2.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (updated[j].reqno === res2[i].reqno && updated[j].from === res2[i].from) {\n            updated[j] = res2[i];\n          }\n        }\n      }\n      if (updated.length === 0) {\n        updated = [...res2];\n      }\n      setRes(updated);\n    };\n    fetchdata();\n  }, []);\n  console.log(ref, ref2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"myTable\",\n        className: \"table table-striped table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Request No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Request From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Quantities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: res.map((ele, i) => {\n            reftask(ele.reqfrom);\n            ref2task(ele.reqfrom);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {}, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(ReceivedReq, \"ix28IknrvaOu4CnPoRAUUi8Aa9A=\");\n_c = ReceivedReq;\nvar _c;\n$RefreshReg$(_c, \"ReceivedReq\");","map":{"version":3,"names":["useState","useEffect","ConnectContractSR","ConnectMetamask","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceivedReq","_s","res","setRes","ref","setRef","ref2","setRef2","accept","decline","reftask","i","ref2task","window","contract1","methods","getallreqreceivedddst","call","fetchdata","contract","getAllreqreceive","localStorage","getItem","res2","getalladsts","updated","length","j","reqno","from","console","log","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","reqfrom","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/ADSTR/ReceivedReq.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ConnectContractSR from \"./ConnectContractSR\";\r\nimport ConnectMetamask from \"./ConnectMetamask\";\r\n\r\nexport default function ReceivedReq(){\r\n    const [res,setRes]=useState([]);\r\n    const [ref,setRef]=useState([]);\r\n    const [ref2,setRef2]=useState([]);\r\n\r\n    const accept=async()=>{\r\n\r\n    }\r\n    const decline=async()=>{\r\n\r\n    }\r\n    const reftask=async(i)=>{\r\n        setRef();\r\n    }\r\n    const ref2task=async(i)=>{\r\n        setRef2(await window.contract1.methods.getallreqreceivedddst(i).call());\r\n        \r\n    }\r\n    \r\n    ConnectMetamask();\r\n    ConnectContractSR();\r\n    useEffect(()=>{\r\n        const fetchdata=async()=>{\r\n            let res=await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\r\n\t\t    let res2=await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\r\n            let updated=[...res];\r\n            for(let i=0;i<res2.length;i++){\r\n                for(let j=0;j<updated.length;j++){\r\n                    if(updated[j].reqno===res2[i].reqno && updated[j].from===res2[i].from){\r\n                        updated[j]=res2[i];\r\n                    }\r\n                }\r\n            }\r\n            if(updated.length===0){\r\n               updated=[...res2];\r\n            }\r\n            setRes(updated);\r\n            \r\n\r\n        }\r\n        fetchdata();\r\n        \r\n        \r\n    },[]);\r\n console.log(ref,ref2);\r\n    return (\r\n       \r\n    \r\n   <>\r\n   <div className=\"container\">\r\n   <table id=\"myTable\" className=\"table table-striped table-hover\">\r\n             <thead>\r\n                <tr>\r\n                    <td>Request No</td>\r\n                    <td>Request From</td>\r\n                    <td>From</td>\r\n                    <td>Products</td>\r\n                    <td>Quantities</td>\r\n                    <td>Date</td>\r\n                    <td>Accept</td>\r\n                    <td>Reject</td>\r\n                </tr>\r\n             </thead>\r\n             <tbody>\r\n             {res.map((ele, i) => {\r\n                    reftask(ele.reqfrom);\r\n                    ref2task(ele.reqfrom);\r\n                    return (\r\n                    <tr key={i}>\r\n                        {\r\n\r\n                        }\r\n                    </tr>\r\n                    );\r\n            })}\r\n\r\n             </tbody>\r\n    </table>\r\n   </div>\r\n   </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}