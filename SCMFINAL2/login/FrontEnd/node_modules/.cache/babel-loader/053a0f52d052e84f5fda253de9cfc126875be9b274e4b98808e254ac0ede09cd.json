{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\ADSTR\\\\StatusofSend.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport ConnectMetamask from \"./ConnectMetamask.jsx\";\nimport ConnectcontractSS from \"./ConnectcontractSS.jsx\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StatusofSend() {\n  _s();\n  const [res, setRes] = useState([]);\n  const [res2, setRes2] = useState([]);\n  const [res3, setRes3] = useState([]);\n  ConnectMetamask();\n  ConnectcontractSS();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await window.contract.methods.getAllreqsent(localStorage.getItem(\"ROLENAME\")).call();\n        setRes(res);\n        const res2 = await window.contract1.methods.getallreqsend(localStorage.getItem(\"ROLENAME\")).call();\n        setRes2(res2);\n        const res3 = await window.contract2.methods.getAllAdstSend(localStorage.getItem(\"ROLENAME\")).call();\n        setRes3(res3);\n        console.log(res, res2, res3);\n        const updated = [...res];\n        console.log();\n        for (let i = 0; i < res.length; i++) {\n          for (let j = 0; j < res2.length; j++) {\n            if (res2[j].reqno === res[i].reqno && res2[j].from === res[i].from) {\n              res[i] = res2[j];\n            }\n          }\n        }\n        for (let i = 0; i < res.length; i++) {\n          for (let j = 0; j < res3.length; j++) {\n            if (res3[j].reqno === res[i].reqno && res3[j].from === res[i].from) {\n              res[i] = res3[j];\n            }\n          }\n        }\n        let resultf = [];\n        for (let i = res.length - 1; i >= 0; i--) {\n          let result = [];\n          const ref1 = await window.contract.methods.track(res[i].from, res[i].reqno).call();\n          for (let item of ref1) {\n            result.push(item);\n          }\n          const ref2 = await window.contract1.methods.track(res[i].from, res[i].reqno).call();\n          for (let item of ref2) {\n            result.push(item);\n          }\n          const ref3 = await window.contract2.methods.track(res[i].from, res[i].reqno).call();\n          for (let item of ref3) {\n            result.push(item);\n          }\n          resultf.push(result);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(StatusofSend, \"FXkOVQ31H6UuSWBBiWS+P4eE+oA=\");\n_c = StatusofSend;\nvar _c;\n$RefreshReg$(_c, \"StatusofSend\");","map":{"version":3,"names":["useEffect","ConnectMetamask","ConnectcontractSS","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","StatusofSend","_s","res","setRes","res2","setRes2","res3","setRes3","fetchData","window","contract","methods","getAllreqsent","localStorage","getItem","call","contract1","getallreqsend","contract2","getAllAdstSend","console","log","updated","i","length","j","reqno","from","resultf","result","ref1","track","item","push","ref2","ref3","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/ADSTR/StatusofSend.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport ConnectMetamask from \"./ConnectMetamask.jsx\";\r\nimport ConnectcontractSS from \"./ConnectcontractSS.jsx\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function StatusofSend() {\r\n  const [res, setRes] = useState([]);\r\n  const [res2, setRes2] = useState([]);\r\n  const [res3, setRes3] = useState([]);\r\n\r\n  ConnectMetamask();\r\n  ConnectcontractSS();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await window.contract.methods\r\n          .getAllreqsent(localStorage.getItem(\"ROLENAME\"))\r\n          .call();\r\n        setRes(res);\r\n\r\n        const res2 = await window.contract1.methods\r\n          .getallreqsend(localStorage.getItem(\"ROLENAME\"))\r\n          .call();\r\n        setRes2(res2);\r\n\r\n        const res3 = await window.contract2.methods\r\n          .getAllAdstSend(localStorage.getItem(\"ROLENAME\"))\r\n          .call();\r\n        setRes3(res3);\r\n\r\n        console.log(res, res2, res3);\r\n        const updated=[...res];\r\n        console.log()\r\n\r\n        for (let i = 0; i < res.length; i++) {\r\n          for (let j = 0; j < res2.length; j++) {\r\n            if (res2[j].reqno === res[i].reqno && res2[j].from === res[i].from) {\r\n              res[i] = res2[j];\r\n            }\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < res.length; i++) {\r\n          for (let j = 0; j < res3.length; j++) {\r\n            if (res3[j].reqno === res[i].reqno && res3[j].from === res[i].from) {\r\n              res[i] = res3[j];\r\n            }\r\n          }\r\n        }\r\n\r\n        let resultf = [];\r\n\r\n        for (let i = res.length - 1; i >= 0; i--) {\r\n          let result = [];\r\n          const ref1 = await window.contract.methods.track(res[i].from, res[i].reqno).call();\r\n          for (let item of ref1) {\r\n            result.push(item);\r\n          }\r\n\r\n          const ref2 = await window.contract1.methods.track(res[i].from, res[i].reqno).call();\r\n          for (let item of ref2) {\r\n            result.push(item);\r\n          }\r\n\r\n          const ref3 = await window.contract2.methods.track(res[i].from, res[i].reqno).call();\r\n          for (let item of ref3) {\r\n            result.push(item);\r\n          }\r\n\r\n          resultf.push(result);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>{res}</div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,iBAAiB,MAAM,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpCF,eAAe,CAAC,CAAC;EACjBC,iBAAiB,CAAC,CAAC;EACnBF,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMN,GAAG,GAAG,MAAMO,MAAM,CAACC,QAAQ,CAACC,OAAO,CACtCC,aAAa,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC/CC,IAAI,CAAC,CAAC;QACTZ,MAAM,CAACD,GAAG,CAAC;QAEX,MAAME,IAAI,GAAG,MAAMK,MAAM,CAACO,SAAS,CAACL,OAAO,CACxCM,aAAa,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC/CC,IAAI,CAAC,CAAC;QACTV,OAAO,CAACD,IAAI,CAAC;QAEb,MAAME,IAAI,GAAG,MAAMG,MAAM,CAACS,SAAS,CAACP,OAAO,CACxCQ,cAAc,CAACN,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAChDC,IAAI,CAAC,CAAC;QACTR,OAAO,CAACD,IAAI,CAAC;QAEbc,OAAO,CAACC,GAAG,CAACnB,GAAG,EAAEE,IAAI,EAAEE,IAAI,CAAC;QAC5B,MAAMgB,OAAO,GAAC,CAAC,GAAGpB,GAAG,CAAC;QACtBkB,OAAO,CAACC,GAAG,CAAC,CAAC;QAEb,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,GAAG,CAACsB,MAAM,EAAED,CAAC,EAAE,EAAE;UACnC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,IAAI,CAACoB,MAAM,EAAEC,CAAC,EAAE,EAAE;YACpC,IAAIrB,IAAI,CAACqB,CAAC,CAAC,CAACC,KAAK,KAAKxB,GAAG,CAACqB,CAAC,CAAC,CAACG,KAAK,IAAItB,IAAI,CAACqB,CAAC,CAAC,CAACE,IAAI,KAAKzB,GAAG,CAACqB,CAAC,CAAC,CAACI,IAAI,EAAE;cAClEzB,GAAG,CAACqB,CAAC,CAAC,GAAGnB,IAAI,CAACqB,CAAC,CAAC;YAClB;UACF;QACF;QAEA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,GAAG,CAACsB,MAAM,EAAED,CAAC,EAAE,EAAE;UACnC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,IAAI,CAACkB,MAAM,EAAEC,CAAC,EAAE,EAAE;YACpC,IAAInB,IAAI,CAACmB,CAAC,CAAC,CAACC,KAAK,KAAKxB,GAAG,CAACqB,CAAC,CAAC,CAACG,KAAK,IAAIpB,IAAI,CAACmB,CAAC,CAAC,CAACE,IAAI,KAAKzB,GAAG,CAACqB,CAAC,CAAC,CAACI,IAAI,EAAE;cAClEzB,GAAG,CAACqB,CAAC,CAAC,GAAGjB,IAAI,CAACmB,CAAC,CAAC;YAClB;UACF;QACF;QAEA,IAAIG,OAAO,GAAG,EAAE;QAEhB,KAAK,IAAIL,CAAC,GAAGrB,GAAG,CAACsB,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACxC,IAAIM,MAAM,GAAG,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMrB,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACoB,KAAK,CAAC7B,GAAG,CAACqB,CAAC,CAAC,CAACI,IAAI,EAAEzB,GAAG,CAACqB,CAAC,CAAC,CAACG,KAAK,CAAC,CAACX,IAAI,CAAC,CAAC;UAClF,KAAK,IAAIiB,IAAI,IAAIF,IAAI,EAAE;YACrBD,MAAM,CAACI,IAAI,CAACD,IAAI,CAAC;UACnB;UAEA,MAAME,IAAI,GAAG,MAAMzB,MAAM,CAACO,SAAS,CAACL,OAAO,CAACoB,KAAK,CAAC7B,GAAG,CAACqB,CAAC,CAAC,CAACI,IAAI,EAAEzB,GAAG,CAACqB,CAAC,CAAC,CAACG,KAAK,CAAC,CAACX,IAAI,CAAC,CAAC;UACnF,KAAK,IAAIiB,IAAI,IAAIE,IAAI,EAAE;YACrBL,MAAM,CAACI,IAAI,CAACD,IAAI,CAAC;UACnB;UAEA,MAAMG,IAAI,GAAG,MAAM1B,MAAM,CAACS,SAAS,CAACP,OAAO,CAACoB,KAAK,CAAC7B,GAAG,CAACqB,CAAC,CAAC,CAACI,IAAI,EAAEzB,GAAG,CAACqB,CAAC,CAAC,CAACG,KAAK,CAAC,CAACX,IAAI,CAAC,CAAC;UACnF,KAAK,IAAIiB,IAAI,IAAIG,IAAI,EAAE;YACrBN,MAAM,CAACI,IAAI,CAACD,IAAI,CAAC;UACnB;UAEAJ,OAAO,CAACK,IAAI,CAACJ,MAAM,CAAC;QACtB;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC;MACpB;IACF,CAAC;IAED5B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAAAE,SAAA;IAAAsC,QAAA,eACExC,OAAA;MAAAwC,QAAA,EAAMnC;IAAG;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAChB,CAAC;AAEP;AAACxC,EAAA,CA/EuBD,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}