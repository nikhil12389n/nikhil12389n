{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\ADSTR\\\\ReceivedReq.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ConnectContractSR from \"./ConnectContractSR\";\nimport ConnectMetamask from \"./ConnectMetamask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReceivedReq() {\n  _s();\n  const [res, setRes] = useState([]);\n  const accept = async () => {};\n  const decline = async () => {};\n  ConnectMetamask();\n  ConnectContractSR();\n  useEffect(() => {\n    const fetchdata = async () => {\n      let res = await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\n      let res2 = await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\n      let updated = [...res];\n      for (let i = 0; i < res2.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (updated[j].reqno === res2[i].reqno && updated[j].from === res2[i].from) {\n            updated[j] = res2[i];\n          }\n        }\n      }\n      if (updated.length === 0) {\n        updated = [...res2];\n      }\n      setRes(updated);\n    };\n    fetchdata();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [res, /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover\",\n        id: \"myTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: res.map((ele, i) => {\n            const fetchdata = async () => {\n              let ref = await window.contract.methods.getallreqreceivedddst(ele.reqfrom).call();\n              let ref2 = await window.contract1.methods.getallreqreceivedddst(ele.reqfrom).call();\n              for (let k = 0; k < ref2.length; k++) {\n                ref.push(ref2[k]);\n              }\n              if (ele.status === \"pending\") {\n                for (let j = 0; j < ref.length; j++) {\n                  if (ref[j].from === ele.from && ele.reqno === ref[j].reqno && ref[j].reqfrom.length === 7) {}\n                  if (ref[j].from === ele.from && ele.reqno === ref[j].reqno && ref[j].reqfrom.length === 4) {\n                    console.log(ele.reqno);\n                  }\n                }\n              }\n            };\n            fetchdata(); // Call the fetchdata function\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: parseInt(ele.reqno)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ele.reqfrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ele.products\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ele.quantities\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ele.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-dark accept-btn\",\n                  onClick: accept(),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-dark decline-btn\",\n                  on: true,\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 9\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 7\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(ReceivedReq, \"6hydTdo6YTOYuCALVe27QnAj1z0=\");\n_c = ReceivedReq;\nvar _c;\n$RefreshReg$(_c, \"ReceivedReq\");","map":{"version":3,"names":["useState","useEffect","ConnectContractSR","ConnectMetamask","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceivedReq","_s","res","setRes","accept","decline","fetchdata","window","contract","methods","getAllreqreceive","localStorage","getItem","call","res2","contract1","getalladsts","updated","i","length","j","reqno","from","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","ref","getallreqreceivedddst","reqfrom","ref2","k","push","status","console","log","parseInt","products","quantities","date","onClick","on","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/ADSTR/ReceivedReq.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ConnectContractSR from \"./ConnectContractSR\";\r\nimport ConnectMetamask from \"./ConnectMetamask\";\r\n\r\nexport default function ReceivedReq(){\r\n    const [res,setRes]=useState([]);\r\n    const accept=async()=>{\r\n\r\n    }\r\n    const decline=async()=>{\r\n\r\n    }\r\n    \r\n    ConnectMetamask();\r\n    ConnectContractSR();\r\n    useEffect(()=>{\r\n        const fetchdata=async()=>{\r\n            let res=await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\r\n\t\t    let res2=await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\r\n            let updated=[...res];\r\n            for(let i=0;i<res2.length;i++){\r\n                for(let j=0;j<updated.length;j++){\r\n                    if(updated[j].reqno===res2[i].reqno && updated[j].from===res2[i].from){\r\n                        updated[j]=res2[i];\r\n                    }\r\n                }\r\n            }\r\n            if(updated.length===0){\r\n               updated=[...res2];\r\n            }\r\n            setRes(updated);\r\n\r\n        }\r\n        fetchdata();\r\n        \r\n        \r\n    })\r\n    return (\r\n        <>\r\n       <div className=\"container\" >\r\n                {res}\r\n                <table className=\"table table-striped table-hover\" id=\"myTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Request no</th>\r\n                            <th>Request from</th>\r\n                            <th>Products</th>\r\n                            <th>Quantities</th>\r\n                            <th>Date</th>\r\n                            <th>Accept</th>\r\n                            <th>Request</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n  {res.map((ele, i) => {\r\n    const fetchdata = async () => {\r\n      let ref = await window.contract.methods.getallreqreceivedddst(ele.reqfrom).call();\r\n      let ref2 = await window.contract1.methods.getallreqreceivedddst(ele.reqfrom).call();\r\n\r\n      for (let k = 0; k < ref2.length; k++) {\r\n        ref.push(ref2[k]);\r\n      }\r\n\r\n      if (ele.status === \"pending\") {\r\n        for (let j = 0; j < ref.length; j++) {\r\n          if (ref[j].from === ele.from && ele.reqno === ref[j].reqno && ref[j].reqfrom.length === 7) {\r\n             \r\n          }\r\n          if (ref[j].from === ele.from && ele.reqno === ref[j].reqno && ref[j].reqfrom.length === 4) {\r\n            console.log(ele.reqno);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchdata(); // Call the fetchdata function\r\n\r\n    return (\r\n      <tr key={i}>\r\n        <td>{parseInt(ele.reqno)}</td>\r\n        <td>{ele.reqfrom}</td>\r\n        <td>{ele.products}</td>\r\n        <td>{ele.quantities}</td>\r\n        <td>{ele.date}</td>\r\n        <td>\r\n          <button className=\"btn btn-dark accept-btn\" onClick={accept()} >Accept</button>\r\n        </td>\r\n        <td>\r\n          <button className=\"btn btn-dark decline-btn\" on>Reject</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n</tbody>\r\n\r\n                    \r\n                </table>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}