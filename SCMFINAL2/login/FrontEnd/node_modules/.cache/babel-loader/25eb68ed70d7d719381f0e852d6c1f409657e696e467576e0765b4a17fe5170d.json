{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\ADSTR\\\\ReceivedReq.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ConnectContractSR from \"./ConnectContractSR\";\nimport ConnectMetamask from \"./ConnectMetamask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReceivedReq() {\n  _s();\n  const [res, setRes] = useState([]);\n  ConnectMetamask();\n  ConnectContractSR();\n  useEffect(() => {\n    const fetchdata = async () => {\n      let res = await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\n      let res2 = await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\n      let updated = [...res];\n      for (let i = 0; i < res2.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (updated[j].reqno === res2[i].reqno && updated[j].from === res2[i].from) {\n            updated[j] = res2[i];\n          }\n        }\n      }\n      if (updated.length === 0) {\n        updated = [...res2];\n      }\n      setRes(updated);\n    };\n    fetchdata();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [res, /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover\",\n        id: \"myTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: res.map((ele, i) => {\n            const fetchdata = async () => {\n              let ref = await window.contract.methods.getallreqreceivedddst(ele.reqfrom).call();\n              let ref2 = await window.contract1.methods.getallreqreceivedddst(ele.reqfrom).call();\n              for (let k = 0; k < ref2.length; k++) {\n                ref.push(ref2[k]);\n              }\n              if (ele.status === \"pending\") {\n                for (let j = 0; j < ref.length; j++) {\n                  if (ref[j].from == res[i].from && res[i].reqno == ref[j].reqno && ref[j].reqfrom.length == 7) {\n                    table.row.add({\n                      'requestno': res[i].reqno,\n                      'reqfrom': res[i].reqfrom,\n                      'from': res[i].from,\n                      'product': res[i].products,\n                      'quantity': res[i].quantities,\n                      'date': res[i].date,\n                      'accept': \"<button class='btn btn-dark accept-btn'>Accept</button>\",\n                      'reject': \"<button class='btn btn-dark decline-btn'>Reject</button>\"\n                    }).draw();\n                  }\n                  if (ref[j].from == res[i].from && res[i].reqno == ref[j].reqno && ref[j].reqfrom.length == 4) {\n                    table.row.add({\n                      'requestno': res[i].reqno,\n                      'reqfrom': res[i].reqfrom,\n                      'from': res[i].from,\n                      'product': res[i].products,\n                      'quantity': res[i].quantities,\n                      'date': res[i].date,\n                      'accept': \"<button class='btn btn-dark accept1-btn'>Accept</button>\",\n                      'reject': \"<button class='btn btn-dark decline1-btn'>Reject</button>\"\n                    }).draw();\n                  }\n                }\n              }\n            };\n            fetchdata();\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(ReceivedReq, \"6hydTdo6YTOYuCALVe27QnAj1z0=\");\n_c = ReceivedReq;\nvar _c;\n$RefreshReg$(_c, \"ReceivedReq\");","map":{"version":3,"names":["useState","useEffect","ConnectContractSR","ConnectMetamask","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceivedReq","_s","res","setRes","fetchdata","window","contract","methods","getAllreqreceive","localStorage","getItem","call","res2","contract1","getalladsts","updated","i","length","j","reqno","from","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","ref","getallreqreceivedddst","reqfrom","ref2","k","push","status","table","row","add","products","quantities","date","draw","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/ADSTR/ReceivedReq.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ConnectContractSR from \"./ConnectContractSR\";\r\nimport ConnectMetamask from \"./ConnectMetamask\";\r\n\r\nexport default function ReceivedReq(){\r\n    const [res,setRes]=useState([]);\r\n    ConnectMetamask();\r\n    ConnectContractSR();\r\n    useEffect(()=>{\r\n        const fetchdata=async()=>{\r\n            let res=await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\r\n\t\t    let res2=await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\r\n            let updated=[...res];\r\n            for(let i=0;i<res2.length;i++){\r\n                for(let j=0;j<updated.length;j++){\r\n                    if(updated[j].reqno===res2[i].reqno && updated[j].from===res2[i].from){\r\n                        updated[j]=res2[i];\r\n                    }\r\n                }\r\n            }\r\n            if(updated.length===0){\r\n               updated=[...res2];\r\n            }\r\n            setRes(updated);\r\n\r\n        }\r\n        fetchdata();\r\n        \r\n        \r\n    })\r\n    return (\r\n        <>\r\n       <div className=\"container\" >\r\n                {res}\r\n                <table className=\"table table-striped table-hover\" id=\"myTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Request no</th>\r\n                            <th>Request from</th>\r\n                            <th>Products</th>\r\n                            <th>Quantities</th>\r\n                            <th>Date</th>\r\n                            <th>Accept</th>\r\n                            <th>Request</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {\r\n                          res.map((ele,i)=>{\r\n\r\n                            const fetchdata=async()=>{\r\n                                let ref=await window.contract.methods.getallreqreceivedddst(ele.reqfrom).call();\t\r\n\t\t\t\t\t            let ref2=await window.contract1.methods.getallreqreceivedddst(ele.reqfrom).call();\t\r\n                                \r\n                                for(let k=0;k<ref2.length;k++){\t\r\n\t\t\t\t\t\t\t       ref.push(ref2[k]);\r\n\t\t\t\t\t\t        }\r\n                                if(ele.status===\"pending\"){\r\n                                    for(let j=0;j<ref.length;j++){\r\n\t\t\t\t\t\t\tif(ref[j].from==res[i].from && res[i].reqno==ref[j].reqno && ref[j].reqfrom.length==7){\t\t\r\n\t\t\t\t\t\t\t\t\ttable.row.add({'requestno':res[i].reqno,'reqfrom':res[i].reqfrom,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'accept':\"<button class='btn btn-dark accept-btn'>Accept</button>\",'reject':\"<button class='btn btn-dark decline-btn'>Reject</button>\"}).draw();\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(ref[j].from==res[i].from && res[i].reqno==ref[j].reqno && ref[j].reqfrom.length==4){\t\r\n\t\t\t\t\t\t\t\ttable.row.add({'requestno':res[i].reqno,'reqfrom':res[i].reqfrom,'from':res[i].from,'product':res[i].products,'quantity':res[i].quantities,'date':res[i].date,'accept':\"<button class='btn btn-dark accept1-btn'>Accept</button>\",'reject':\"<button class='btn btn-dark decline1-btn'>Reject</button>\"}).draw();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n                                }\r\n                              \r\n                                  \r\n\r\n\r\n\r\n                            }\r\n                            fetchdata();\r\n                            return null;\r\n                          })\r\n                          \r\n                       }\r\n                    </tbody>\r\n                    \r\n                </table>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAC/BG,eAAe,CAAC,CAAC;EACjBD,iBAAiB,CAAC,CAAC;EACnBD,SAAS,CAAC,MAAI;IACV,MAAMW,SAAS,GAAC,MAAAA,CAAA,KAAS;MACrB,IAAIF,GAAG,GAAC,MAAMG,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACC,gBAAgB,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACrG,IAAIC,IAAI,GAAC,MAAMP,MAAM,CAACQ,SAAS,CAACN,OAAO,CAACO,WAAW,CAACL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACtF,IAAII,OAAO,GAAC,CAAC,GAAGb,GAAG,CAAC;MACpB,KAAI,IAAIc,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,IAAI,CAACK,MAAM,EAACD,CAAC,EAAE,EAAC;QAC1B,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,OAAO,CAACE,MAAM,EAACC,CAAC,EAAE,EAAC;UAC7B,IAAGH,OAAO,CAACG,CAAC,CAAC,CAACC,KAAK,KAAGP,IAAI,CAACI,CAAC,CAAC,CAACG,KAAK,IAAIJ,OAAO,CAACG,CAAC,CAAC,CAACE,IAAI,KAAGR,IAAI,CAACI,CAAC,CAAC,CAACI,IAAI,EAAC;YAClEL,OAAO,CAACG,CAAC,CAAC,GAACN,IAAI,CAACI,CAAC,CAAC;UACtB;QACJ;MACJ;MACA,IAAGD,OAAO,CAACE,MAAM,KAAG,CAAC,EAAC;QACnBF,OAAO,GAAC,CAAC,GAAGH,IAAI,CAAC;MACpB;MACAT,MAAM,CAACY,OAAO,CAAC;IAEnB,CAAC;IACDX,SAAS,CAAC,CAAC;EAGf,CAAC,CAAC;EACF,oBACIP,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACDxB,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAD,QAAA,GAChBnB,GAAG,eACJL,OAAA;QAAOyB,SAAS,EAAC,iCAAiC;QAACC,EAAE,EAAC,SAAS;QAAAF,QAAA,gBAC3DxB,OAAA;UAAAwB,QAAA,eACIxB,OAAA;YAAAwB,QAAA,gBACIxB,OAAA;cAAAwB,QAAA,EAAI;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB9B,OAAA;cAAAwB,QAAA,EAAI;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB9B,OAAA;cAAAwB,QAAA,EAAI;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB9B,OAAA;cAAAwB,QAAA,EAAI;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB9B,OAAA;cAAAwB,QAAA,EAAI;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb9B,OAAA;cAAAwB,QAAA,EAAI;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACf9B,OAAA;cAAAwB,QAAA,EAAI;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACR9B,OAAA;UAAAwB,QAAA,EAEMnB,GAAG,CAAC0B,GAAG,CAAC,CAACC,GAAG,EAACb,CAAC,KAAG;YAEf,MAAMZ,SAAS,GAAC,MAAAA,CAAA,KAAS;cACrB,IAAI0B,GAAG,GAAC,MAAMzB,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACwB,qBAAqB,CAACF,GAAG,CAACG,OAAO,CAAC,CAACrB,IAAI,CAAC,CAAC;cAC9F,IAAIsB,IAAI,GAAC,MAAM5B,MAAM,CAACQ,SAAS,CAACN,OAAO,CAACwB,qBAAqB,CAACF,GAAG,CAACG,OAAO,CAAC,CAACrB,IAAI,CAAC,CAAC;cAElE,KAAI,IAAIuB,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,IAAI,CAAChB,MAAM,EAACiB,CAAC,EAAE,EAAC;gBAChDJ,GAAG,CAACK,IAAI,CAACF,IAAI,CAACC,CAAC,CAAC,CAAC;cACjB;cACkB,IAAGL,GAAG,CAACO,MAAM,KAAG,SAAS,EAAC;gBACtB,KAAI,IAAIlB,CAAC,GAAC,CAAC,EAACA,CAAC,GAACY,GAAG,CAACb,MAAM,EAACC,CAAC,EAAE,EAAC;kBAC1D,IAAGY,GAAG,CAACZ,CAAC,CAAC,CAACE,IAAI,IAAElB,GAAG,CAACc,CAAC,CAAC,CAACI,IAAI,IAAIlB,GAAG,CAACc,CAAC,CAAC,CAACG,KAAK,IAAEW,GAAG,CAACZ,CAAC,CAAC,CAACC,KAAK,IAAIW,GAAG,CAACZ,CAAC,CAAC,CAACc,OAAO,CAACf,MAAM,IAAE,CAAC,EAAC;oBACpFoB,KAAK,CAACC,GAAG,CAACC,GAAG,CAAC;sBAAC,WAAW,EAACrC,GAAG,CAACc,CAAC,CAAC,CAACG,KAAK;sBAAC,SAAS,EAACjB,GAAG,CAACc,CAAC,CAAC,CAACgB,OAAO;sBAAC,MAAM,EAAC9B,GAAG,CAACc,CAAC,CAAC,CAACI,IAAI;sBAAC,SAAS,EAAClB,GAAG,CAACc,CAAC,CAAC,CAACwB,QAAQ;sBAAC,UAAU,EAACtC,GAAG,CAACc,CAAC,CAAC,CAACyB,UAAU;sBAAC,MAAM,EAACvC,GAAG,CAACc,CAAC,CAAC,CAAC0B,IAAI;sBAAC,QAAQ,EAAC,yDAAyD;sBAAC,QAAQ,EAAC;oBAA0D,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;kBAC/S;kBACA,IAAGb,GAAG,CAACZ,CAAC,CAAC,CAACE,IAAI,IAAElB,GAAG,CAACc,CAAC,CAAC,CAACI,IAAI,IAAIlB,GAAG,CAACc,CAAC,CAAC,CAACG,KAAK,IAAEW,GAAG,CAACZ,CAAC,CAAC,CAACC,KAAK,IAAIW,GAAG,CAACZ,CAAC,CAAC,CAACc,OAAO,CAACf,MAAM,IAAE,CAAC,EAAC;oBACrFoB,KAAK,CAACC,GAAG,CAACC,GAAG,CAAC;sBAAC,WAAW,EAACrC,GAAG,CAACc,CAAC,CAAC,CAACG,KAAK;sBAAC,SAAS,EAACjB,GAAG,CAACc,CAAC,CAAC,CAACgB,OAAO;sBAAC,MAAM,EAAC9B,GAAG,CAACc,CAAC,CAAC,CAACI,IAAI;sBAAC,SAAS,EAAClB,GAAG,CAACc,CAAC,CAAC,CAACwB,QAAQ;sBAAC,UAAU,EAACtC,GAAG,CAACc,CAAC,CAAC,CAACyB,UAAU;sBAAC,MAAM,EAACvC,GAAG,CAACc,CAAC,CAAC,CAAC0B,IAAI;sBAAC,QAAQ,EAAC,0DAA0D;sBAAC,QAAQ,EAAC;oBAA2D,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;kBAEhT;gBACD;cAE0B;YAMJ,CAAC;YACDvC,SAAS,CAAC,CAAC;YACX,OAAO,IAAI;UACb,CAAC;QAAC;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP;EAAC,gBACR,CAAC;AAEX;AAAC1B,EAAA,CAnFuBD,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}