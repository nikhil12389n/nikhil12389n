{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n// eslint-disable-next-line max-classes-per-file\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { jsonRpc } from 'web3-utils';\nimport { Web3EventEmitter } from './web3_event_emitter.js';\nexport class Web3Subscription extends Web3EventEmitter {\n  constructor(args, options) {\n    var _a;\n    super();\n    this.args = args;\n    this._requestManager = options.requestManager;\n    this._returnFormat = (_a = options.returnFormat) !== null && _a !== void 0 ? _a : DEFAULT_RETURN_FORMAT;\n  }\n  get id() {\n    return this._id;\n  }\n  get lastBlock() {\n    return this._lastBlock;\n  }\n  subscribe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this._id = yield this._requestManager.send({\n        method: 'eth_subscribe',\n        params: this._buildSubscriptionParams()\n      });\n      const messageListener = data => {\n        var _a, _b;\n        // for EIP-1193 provider\n        if (data === null || data === void 0 ? void 0 : data.data) {\n          this._processSubscriptionResult((_b = (_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.result) !== null && _b !== void 0 ? _b : data === null || data === void 0 ? void 0 : data.data);\n          return;\n        }\n        if (data && jsonRpc.isResponseWithNotification(data)) {\n          this._processSubscriptionResult(data === null || data === void 0 ? void 0 : data.params.result);\n        }\n      };\n      if (typeof this._requestManager.provider.request === 'function') {\n        this._requestManager.provider.on('message', messageListener);\n      } else {\n        this._requestManager.provider.on('data', messageListener);\n      }\n      this._messageListener = messageListener;\n    });\n  }\n  get returnFormat() {\n    return this._returnFormat;\n  }\n  resubscribe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.unsubscribe();\n      yield this.subscribe();\n    });\n  }\n  unsubscribe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.id) {\n        return;\n      }\n      yield this._requestManager.send({\n        method: 'eth_unsubscribe',\n        params: [this.id]\n      });\n      this._id = undefined;\n      this._requestManager.provider.removeListener('message', this._messageListener);\n    });\n  }\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  _processSubscriptionResult(_data) {\n    // Do nothing - This should be overridden in subclass.\n  }\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  _processSubscriptionError(_err) {\n    // Do nothing - This should be overridden in subclass.\n  }\n  // eslint-disable-next-line class-methods-use-this\n  _buildSubscriptionParams() {\n    // This should be overridden in the subclass\n    throw new Error('Implement in the child class');\n  }\n}","map":{"version":3,"names":["DEFAULT_RETURN_FORMAT","jsonRpc","Web3EventEmitter","Web3Subscription","constructor","args","options","_requestManager","requestManager","_returnFormat","_a","returnFormat","id","_id","lastBlock","_lastBlock","subscribe","send","method","params","_buildSubscriptionParams","messageListener","data","_processSubscriptionResult","_b","result","isResponseWithNotification","provider","request","on","_messageListener","resubscribe","unsubscribe","undefined","removeListener","_data","_processSubscriptionError","_err","Error"],"sources":["D:\\SCMFINAL2\\login\\node_modules\\web3-core\\src\\web3_subscriptions.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tHexString,\n\tBlockOutput,\n\tWeb3BaseProvider,\n\tWeb3APISpec,\n\tWeb3APIParams,\n\tEthExecutionAPI,\n\tLog,\n\tJsonRpcNotification,\n\tJsonRpcSubscriptionResult,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tJsonRpcSubscriptionResultOld,\n\tEIP1193Provider,\n} from 'web3-types';\nimport { jsonRpc } from 'web3-utils';\nimport { Web3EventEmitter, Web3EventMap } from './web3_event_emitter.js';\n\nimport { Web3RequestManager } from './web3_request_manager.js';\n\nexport abstract class Web3Subscription<\n\tEventMap extends Web3EventMap,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tArgsType = any,\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends Web3EventEmitter<EventMap> {\n\tprivate readonly _requestManager: Web3RequestManager<API>;\n\tprivate readonly _lastBlock?: BlockOutput;\n\tprivate readonly _returnFormat: DataFormat;\n\tprivate _id?: HexString;\n\tprivate _messageListener?: (data?: JsonRpcNotification<Log>) => void;\n\n\tpublic constructor(\n\t\tpublic readonly args: ArgsType,\n\n\t\toptions: { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t) {\n\t\tsuper();\n\t\tthis._requestManager = options.requestManager;\n\t\tthis._returnFormat = options.returnFormat ?? (DEFAULT_RETURN_FORMAT as DataFormat);\n\t}\n\n\tpublic get id() {\n\t\treturn this._id;\n\t}\n\n\tpublic get lastBlock() {\n\t\treturn this._lastBlock;\n\t}\n\n\tpublic async subscribe() {\n\t\tthis._id = await this._requestManager.send({\n\t\t\tmethod: 'eth_subscribe',\n\t\t\tparams: this._buildSubscriptionParams(),\n\t\t});\n\n\t\tconst messageListener = (\n\t\t\tdata?:\n\t\t\t\t| JsonRpcSubscriptionResult\n\t\t\t\t| JsonRpcSubscriptionResultOld<Log>\n\t\t\t\t| JsonRpcNotification<Log>,\n\t\t) => {\n\t\t\t// for EIP-1193 provider\n\t\t\tif (data?.data) {\n\t\t\t\tthis._processSubscriptionResult(data?.data?.result ?? data?.data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tdata &&\n\t\t\t\tjsonRpc.isResponseWithNotification(\n\t\t\t\t\tdata as unknown as JsonRpcSubscriptionResult | JsonRpcNotification<Log>,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis._processSubscriptionResult(data?.params.result);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof (this._requestManager.provider as EIP1193Provider<API>).request === 'function') {\n\t\t\t(this._requestManager.provider as Web3BaseProvider).on<Log>('message', messageListener);\n\t\t} else {\n\t\t\t(this._requestManager.provider as Web3BaseProvider).on<Log>('data', messageListener);\n\t\t}\n\n\t\tthis._messageListener = messageListener;\n\t}\n\tprotected get returnFormat() {\n\t\treturn this._returnFormat;\n\t}\n\tpublic async resubscribe() {\n\t\tawait this.unsubscribe();\n\t\tawait this.subscribe();\n\t}\n\n\tpublic async unsubscribe() {\n\t\tif (!this.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._requestManager.send({\n\t\t\tmethod: 'eth_unsubscribe',\n\t\t\tparams: [this.id] as Web3APIParams<API, 'eth_unsubscribe'>,\n\t\t});\n\n\t\tthis._id = undefined;\n\t\t(this._requestManager.provider as Web3BaseProvider).removeListener(\n\t\t\t'message',\n\t\t\tthis._messageListener as never,\n\t\t);\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n\tprotected _processSubscriptionResult(_data: unknown) {\n\t\t// Do nothing - This should be overridden in subclass.\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n\tprotected _processSubscriptionError(_err: Error) {\n\t\t// Do nothing - This should be overridden in subclass.\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected _buildSubscriptionParams(): Web3APIParams<API, 'eth_subscribe'> {\n\t\t// This should be overridden in the subclass\n\t\tthrow new Error('Implement in the child class');\n\t}\n}\n\nexport type Web3SubscriptionConstructor<\n\tAPI extends Web3APISpec,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tSubscriptionType extends Web3Subscription<any, any, API> = Web3Subscription<any, any, API>,\n> = new (\n\t// We accept any type of arguments here and don't deal with this type internally\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\targs: any,\n\toptions: { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n) => SubscriptionType;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}