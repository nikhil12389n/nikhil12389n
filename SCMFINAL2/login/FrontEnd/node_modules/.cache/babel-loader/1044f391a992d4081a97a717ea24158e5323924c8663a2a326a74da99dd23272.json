{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL2\\\\login\\\\public\\\\src\\\\Roles\\\\DDST\\\\ReceivedRequests.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport ConnectMetamask from '../Connection/ConnectMetaMask';\nimport ConnectContract from '../Connection/ConnectSmartContract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DDSTReceivedRequests() {\n  _s();\n  const [res, setRes] = useState([]);\n  ConnectMetamask();\n  ConnectContract();\n  useEffect(() => {\n    const fetchdata = async () => {\n      const res = await window.contract.methods.getAllreceivedDDST(localStorage.getItem(\"ROLENAME\")).call();\n      setRes(res);\n      console.log(res);\n    };\n    fetchdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"RequestNo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Reqorigin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Reqfrom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Quantities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Send to adsts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Send to dgst\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: res.map((row, i) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(DDSTReceivedRequests, \"6hydTdo6YTOYuCALVe27QnAj1z0=\");\n_c = DDSTReceivedRequests;\nvar _c;\n$RefreshReg$(_c, \"DDSTReceivedRequests\");","map":{"version":3,"names":["React","useEffect","useState","ConnectMetamask","ConnectContract","jsxDEV","_jsxDEV","Fragment","_Fragment","DDSTReceivedRequests","_s","res","setRes","fetchdata","window","contract","methods","getAllreceivedDDST","localStorage","getItem","call","console","log","children","class","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","row","i","_c","$RefreshReg$"],"sources":["D:/SCMFINAL2/login/public/src/Roles/DDST/ReceivedRequests.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport ConnectMetamask from '../Connection/ConnectMetaMask';\r\nimport ConnectContract from '../Connection/ConnectSmartContract';\r\n\r\nexport default function DDSTReceivedRequests() {\r\n    const [res,setRes]=useState([]);\r\n    ConnectMetamask();\r\n    ConnectContract();\r\n    useEffect(()=>{\r\n        const fetchdata=async()=>{\r\n            const res=await window.contract.methods.getAllreceivedDDST(localStorage.getItem(\"ROLENAME\")).call();\r\n            setRes(res);\r\n            console.log(res);\r\n        }\r\n        fetchdata();\r\n\r\n\r\n    },[]);\r\n  return (\r\n    <>\r\n    <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">RequestNo</th>\r\n      <th scope=\"col\">Reqorigin</th>\r\n      <th scope=\"col\">Reqfrom</th>\r\n      <th scope=\"col\">Products</th>\r\n      <th scope=\"col\">Quantities</th>\r\n      <th scope=\"col\">Date</th>\r\n      <th scope=\"col\">Send to adsts</th>\r\n      <th scope=\"col\">Send to dgst</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {\r\n        res.map((row,i)=>{\r\n            return (\r\n                <tr>\r\n                    \r\n                </tr>\r\n\r\n            );\r\n        })\r\n    }\r\n  </tbody>\r\n</table>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}