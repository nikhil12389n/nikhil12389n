{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL2\\\\login\\\\public\\\\src\\\\Roles\\\\ADST\\\\Trackorder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ConnectMetamask from \"../Connection/ConnectMetaMask.js\";\nimport ConnectContract2 from '../Connection/ConnectContract2.js';\nimport ConnectContract from \"../Connection/ConnectSmartContract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Trackorder() {\n  _s();\n  const [res, setRes] = useState([]);\n  const [trackorder, setTrackOrder] = useState([]);\n  ConnectMetamask();\n  ConnectContract();\n  ConnectContract2();\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await window.contract.methods.getAllRequestSendAdst(localStorage.getItem(\"ROLENAME\")).call();\n      const res1 = await window.contract1.methods.getalladstsend(localStorage.getItem(\"ROLENAME\")).call();\n      const updated = [...res];\n      for (let i = 0; i < res1.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (parseInt(res1[i].reqno) === parseInt(updated[j].reqno) && res1[i].from === updated[j].from) {\n            const updatedObj = {\n              ...updated[j],\n              status: res1[i].status,\n              acceptedby: res1[i].acceptedby\n            };\n            updated[j] = updatedObj;\n          }\n        }\n      }\n      setRes(updated);\n      for (let i = 0; i < updated.length; i++) {\n        const data = await window.contract.methods.getAllTrackorders(localStorage.getItem(\"ROLENAME\"), updated[i].reqno).call();\n        setTrackOrder(prevTrackOrder => [...prevTrackOrder, data]);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(trackorder);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: trackorder.map((ele, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\"Request \", i + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Trackorder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), ele.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), index !== ele.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow\",\n            children: \"\\u2794\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 46\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Trackorder, \"dNwjyh8wiXhl0022yr8rkaobSN8=\");\n_c = Trackorder;\nvar _c;\n$RefreshReg$(_c, \"Trackorder\");","map":{"version":3,"names":["React","useEffect","useState","ConnectMetamask","ConnectContract2","ConnectContract","jsxDEV","_jsxDEV","Fragment","_Fragment","Trackorder","_s","res","setRes","trackorder","setTrackOrder","fetchData","window","contract","methods","getAllRequestSendAdst","localStorage","getItem","call","res1","contract1","getalladstsend","updated","i","length","j","parseInt","reqno","from","updatedObj","status","acceptedby","data","getAllTrackorders","prevTrackOrder","console","log","children","map","ele","className","fileName","_jsxFileName","lineNumber","columnNumber","item","index","_c","$RefreshReg$"],"sources":["D:/SCMFINAL2/login/public/src/Roles/ADST/Trackorder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ConnectMetamask from \"../Connection/ConnectMetaMask.js\";\r\nimport ConnectContract2 from '../Connection/ConnectContract2.js';\r\nimport ConnectContract from \"../Connection/ConnectSmartContract.js\";\r\n\r\nexport default function Trackorder() {\r\n  const [res, setRes] = useState([]);\r\n  const [trackorder, setTrackOrder] = useState([]);\r\n  ConnectMetamask();\r\n  ConnectContract();\r\n  ConnectContract2();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await window.contract.methods.getAllRequestSendAdst(localStorage.getItem(\"ROLENAME\")).call();\r\n      const res1 = await window.contract1.methods.getalladstsend(localStorage.getItem(\"ROLENAME\")).call();\r\n\r\n      const updated = [...res];\r\n      for (let i = 0; i < res1.length; i++) {\r\n        for (let j = 0; j < updated.length; j++) {\r\n          if (parseInt(res1[i].reqno) === parseInt(updated[j].reqno) && res1[i].from === updated[j].from) {\r\n            const updatedObj = {\r\n              ...updated[j],\r\n              status: res1[i].status,\r\n              acceptedby: res1[i].acceptedby\r\n            };\r\n            updated[j] = updatedObj;\r\n          }\r\n        }\r\n      }\r\n\r\n      setRes(updated);\r\n\r\n      for (let i = 0; i < updated.length; i++) {\r\n        const data = await window.contract.methods.getAllTrackorders(localStorage.getItem(\"ROLENAME\"), updated[i].reqno).call();\r\n        setTrackOrder(prevTrackOrder => [...prevTrackOrder, data]);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(trackorder);\r\n\r\n  return (\r\n    <>\r\n      {trackorder.map((ele, i) => (\r\n        <div key={i} className=\"card my-3\">\r\n          <div className=\"card-header\">\r\n            Request {i + 1}\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Trackorder</h5>\r\n            {ele.map((item, index) => (\r\n              <React.Fragment key={index}>\r\n                <p className=\"card-text\">{item}</p>\r\n                {index !== ele.length - 1 && <div className=\"arrow\">âž”</div>}\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}