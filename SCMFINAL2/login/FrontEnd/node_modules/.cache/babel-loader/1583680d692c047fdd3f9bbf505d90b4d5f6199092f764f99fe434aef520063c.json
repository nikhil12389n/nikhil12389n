{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCMFINAL\\\\login\\\\public\\\\src\\\\ADSTR\\\\ReceivedReq.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ConnectContractSR from \"./ConnectContractSR\";\nimport ConnectMetamask from \"./ConnectMetamask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReceivedReq() {\n  _s();\n  const [res, setRes] = useState([]);\n  ConnectMetamask();\n  ConnectContractSR();\n  useEffect(() => {\n    var table = $(\"#example\").DataTable({\n      columns: [{\n        title: \"RequestNo\",\n        data: \"requestno\"\n      }, {\n        title: \"reqfrom\",\n        data: \"reqfrom\"\n      }, {\n        title: \"From\",\n        data: \"from\"\n      }, {\n        title: \"product\",\n        data: \"product\"\n      }, {\n        title: \"quantity\",\n        data: \"quantity\"\n      }, {\n        title: \"date\",\n        data: \"date\"\n      }, {\n        title: \"accept\",\n        data: \"accept\"\n      }, {\n        title: \"reject\",\n        data: \"reject\"\n      }]\n    });\n    const fetchdata = async () => {\n      let res = await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\n      let res2 = await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\n      let updated = [...res];\n      for (let i = 0; i < res2.length; i++) {\n        for (let j = 0; j < updated.length; j++) {\n          if (updated[j].reqno === res2[i].reqno && updated[j].from === res2[i].from) {\n            updated[j] = res2[i];\n          }\n        }\n      }\n      if (updated.length === 0) {\n        updated = [...res2];\n      }\n      for (let i = 0; i < updated.length; i++) {\n        let ref = await window.contract.methods.getallreqreceivedddst(updated[i].reqfrom).call();\n        let ref2 = await window.contract1.methods.getallreqreceivedddst(updated[i].reqfrom).call();\n\n        // console.log(ref,ref2);\n\n        for (let k = 0; k < ref2.length; k++) {\n          ref.push(ref2[k]);\n        }\n        console.log(ref);\n        if (updated[i].status === \"pending\") {\n          for (let j = 0; j < ref.length; j++) {\n            if (ref[j].from === res[i].from && updated[i].reqno === ref[j].reqno && ref[j].reqfrom.length === 7) {\n              table.row.add({\n                'requestno': updated[i].reqno,\n                'reqfrom': updated[i].reqfrom,\n                'from': updated[i].from,\n                'product': updated[i].products,\n                'quantity': updated[i].quantities,\n                'date': updated[i].date,\n                'accept': \"<button class='btn btn-dark accept-btn'>Accept</button>\",\n                'reject': \"<button class='btn btn-dark decline-btn'>Reject</button>\"\n              }).draw();\n            }\n            if (ref[j].from === updated[i].from && updated[i].reqno === ref[j].reqno && ref[j].reqfrom.length === 4) {\n              table.row.add({\n                'requestno': updated[i].reqno,\n                'reqfrom': updated[i].reqfrom,\n                'from': updated[i].from,\n                'product': updated[i].products,\n                'quantity': updated[i].quantities,\n                'date': updated[i].date,\n                'accept': \"<button class='btn btn-dark accept1-btn'>Accept</button>\",\n                'reject': \"<button class='btn btn-dark decline1-btn'>Reject</button>\"\n              }).draw();\n            }\n          }\n        }\n      }\n    };\n    fetchdata();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ReceivedReq, \"6hydTdo6YTOYuCALVe27QnAj1z0=\");\n_c = ReceivedReq;\nvar _c;\n$RefreshReg$(_c, \"ReceivedReq\");","map":{"version":3,"names":["useState","useEffect","ConnectContractSR","ConnectMetamask","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceivedReq","_s","res","setRes","table","$","DataTable","columns","title","data","fetchdata","window","contract","methods","getAllreqreceive","localStorage","getItem","call","res2","contract1","getalladsts","updated","i","length","j","reqno","from","ref","getallreqreceivedddst","reqfrom","ref2","k","push","console","log","status","row","add","products","quantities","date","draw","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SCMFINAL/login/public/src/ADSTR/ReceivedReq.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ConnectContractSR from \"./ConnectContractSR\";\r\nimport ConnectMetamask from \"./ConnectMetamask\";\r\n\r\nexport default function ReceivedReq(){\r\n    const [res,setRes]=useState([]);\r\n    ConnectMetamask();\r\n    ConnectContractSR();\r\n    useEffect(()=>{\r\n        var table = $(\"#example\").DataTable({\r\n            columns: [\r\n              { title: \"RequestNo\", data: \"requestno\" },\r\n              { title: \"reqfrom\", data: \"reqfrom\" },\r\n              { title: \"From\", data: \"from\" },\r\n    \r\n            \r\n    \r\n              { title: \"product\", data: \"product\" },\r\n              { title: \"quantity\", data: \"quantity\" },\r\n             \r\n              { title: \"date\", data: \"date\" },\r\n              { title: \"accept\", data: \"accept\" },\r\n              { title: \"reject\", data: \"reject\" },\r\n              \r\n            ],\r\n          });\r\n        const fetchdata=async()=>{\r\n            let res=await window.contract.methods.getAllreqreceive(localStorage.getItem(\"ROLENAME\")).call();\r\n\t\t    let res2=await window.contract1.methods.getalladsts(localStorage.getItem(\"ROLENAME\")).call();\r\n            let updated=[...res];\r\n            for(let i=0;i<res2.length;i++){\r\n                for(let j=0;j<updated.length;j++){\r\n                    if(updated[j].reqno===res2[i].reqno && updated[j].from===res2[i].from){\r\n                        updated[j]=res2[i];\r\n                    }\r\n                }\r\n            }\r\n            if(updated.length===0){\r\n               updated=[...res2];\r\n            }\r\n\r\n\r\n            for(let i=0;i<updated.length;i++){ \r\n                let ref=await window.contract.methods.getallreqreceivedddst(updated[i].reqfrom).call();\r\n                       \r\n                        \r\n                        let ref2=await window.contract1.methods.getallreqreceivedddst(updated[i].reqfrom).call();\r\n                        \r\n                        \r\n                        // console.log(ref,ref2);\r\n                        \r\n                            for(let k=0;k<ref2.length;k++){\r\n                            \r\n                                ref.push(ref2[k]);\r\n                            }\r\n                            \r\n                        \r\n                        console.log(ref);\r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        if(updated[i].status===\"pending\"){\r\n                            for(let j=0;j<ref.length;j++){\r\n                                if(ref[j].from===res[i].from && updated[i].reqno===ref[j].reqno && ref[j].reqfrom.length===7){\r\n                                    \r\n                                        table.row.add({'requestno':updated[i].reqno,'reqfrom':updated[i].reqfrom,'from':updated[i].from,'product':updated[i].products,'quantity':updated[i].quantities,'date':updated[i].date,'accept':\"<button class='btn btn-dark accept-btn'>Accept</button>\",'reject':\"<button class='btn btn-dark decline-btn'>Reject</button>\"}).draw();\r\n                                    \r\n                                }\r\n                                if(ref[j].from===updated[i].from && updated[i].reqno===ref[j].reqno && ref[j].reqfrom.length===4){\r\n                                    \r\n                                \r\n                                    \r\n                                    table.row.add({'requestno':updated[i].reqno,'reqfrom':updated[i].reqfrom,'from':updated[i].from,'product':updated[i].products,'quantity':updated[i].quantities,'date':updated[i].date,'accept':\"<button class='btn btn-dark accept1-btn'>Accept</button>\",'reject':\"<button class='btn btn-dark decline1-btn'>Reject</button>\"}).draw();\r\n                                \r\n                                }\r\n                            }\r\n                        }\r\n                    \r\n                            \r\n                        }\r\n                        \r\n\r\n    \r\n            \r\n\r\n\r\n        }\r\n        fetchdata();\r\n        \r\n        \r\n    })\r\n    return (\r\n        <>\r\n        \r\n        <div>\r\n            <table></table>\r\n        </div>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAC/BG,eAAe,CAAC,CAAC;EACjBD,iBAAiB,CAAC,CAAC;EACnBD,SAAS,CAAC,MAAI;IACV,IAAIW,KAAK,GAAGC,CAAC,CAAC,UAAU,CAAC,CAACC,SAAS,CAAC;MAChCC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAY,CAAC,EACzC;QAAED,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,CAAC,EACrC;QAAED,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAO,CAAC,EAI/B;QAAED,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,CAAC,EACrC;QAAED,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAW,CAAC,EAEvC;QAAED,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC/B;QAAED,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EACnC;QAAED,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC;IAGvC,CAAC,CAAC;IACJ,MAAMC,SAAS,GAAC,MAAAA,CAAA,KAAS;MACrB,IAAIR,GAAG,GAAC,MAAMS,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACC,gBAAgB,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACrG,IAAIC,IAAI,GAAC,MAAMP,MAAM,CAACQ,SAAS,CAACN,OAAO,CAACO,WAAW,CAACL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACtF,IAAII,OAAO,GAAC,CAAC,GAAGnB,GAAG,CAAC;MACpB,KAAI,IAAIoB,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,IAAI,CAACK,MAAM,EAACD,CAAC,EAAE,EAAC;QAC1B,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,OAAO,CAACE,MAAM,EAACC,CAAC,EAAE,EAAC;UAC7B,IAAGH,OAAO,CAACG,CAAC,CAAC,CAACC,KAAK,KAAGP,IAAI,CAACI,CAAC,CAAC,CAACG,KAAK,IAAIJ,OAAO,CAACG,CAAC,CAAC,CAACE,IAAI,KAAGR,IAAI,CAACI,CAAC,CAAC,CAACI,IAAI,EAAC;YAClEL,OAAO,CAACG,CAAC,CAAC,GAACN,IAAI,CAACI,CAAC,CAAC;UACtB;QACJ;MACJ;MACA,IAAGD,OAAO,CAACE,MAAM,KAAG,CAAC,EAAC;QACnBF,OAAO,GAAC,CAAC,GAAGH,IAAI,CAAC;MACpB;MAGA,KAAI,IAAII,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,OAAO,CAACE,MAAM,EAACD,CAAC,EAAE,EAAC;QAC7B,IAAIK,GAAG,GAAC,MAAMhB,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACe,qBAAqB,CAACP,OAAO,CAACC,CAAC,CAAC,CAACO,OAAO,CAAC,CAACZ,IAAI,CAAC,CAAC;QAG9E,IAAIa,IAAI,GAAC,MAAMnB,MAAM,CAACQ,SAAS,CAACN,OAAO,CAACe,qBAAqB,CAACP,OAAO,CAACC,CAAC,CAAC,CAACO,OAAO,CAAC,CAACZ,IAAI,CAAC,CAAC;;QAGxF;;QAEI,KAAI,IAAIc,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,IAAI,CAACP,MAAM,EAACQ,CAAC,EAAE,EAAC;UAE1BJ,GAAG,CAACK,IAAI,CAACF,IAAI,CAACC,CAAC,CAAC,CAAC;QACrB;QAGJE,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;QAShB,IAAGN,OAAO,CAACC,CAAC,CAAC,CAACa,MAAM,KAAG,SAAS,EAAC;UAC7B,KAAI,IAAIX,CAAC,GAAC,CAAC,EAACA,CAAC,GAACG,GAAG,CAACJ,MAAM,EAACC,CAAC,EAAE,EAAC;YACzB,IAAGG,GAAG,CAACH,CAAC,CAAC,CAACE,IAAI,KAAGxB,GAAG,CAACoB,CAAC,CAAC,CAACI,IAAI,IAAIL,OAAO,CAACC,CAAC,CAAC,CAACG,KAAK,KAAGE,GAAG,CAACH,CAAC,CAAC,CAACC,KAAK,IAAIE,GAAG,CAACH,CAAC,CAAC,CAACK,OAAO,CAACN,MAAM,KAAG,CAAC,EAAC;cAErFnB,KAAK,CAACgC,GAAG,CAACC,GAAG,CAAC;gBAAC,WAAW,EAAChB,OAAO,CAACC,CAAC,CAAC,CAACG,KAAK;gBAAC,SAAS,EAACJ,OAAO,CAACC,CAAC,CAAC,CAACO,OAAO;gBAAC,MAAM,EAACR,OAAO,CAACC,CAAC,CAAC,CAACI,IAAI;gBAAC,SAAS,EAACL,OAAO,CAACC,CAAC,CAAC,CAACgB,QAAQ;gBAAC,UAAU,EAACjB,OAAO,CAACC,CAAC,CAAC,CAACiB,UAAU;gBAAC,MAAM,EAAClB,OAAO,CAACC,CAAC,CAAC,CAACkB,IAAI;gBAAC,QAAQ,EAAC,yDAAyD;gBAAC,QAAQ,EAAC;cAA0D,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;YAE7U;YACA,IAAGd,GAAG,CAACH,CAAC,CAAC,CAACE,IAAI,KAAGL,OAAO,CAACC,CAAC,CAAC,CAACI,IAAI,IAAIL,OAAO,CAACC,CAAC,CAAC,CAACG,KAAK,KAAGE,GAAG,CAACH,CAAC,CAAC,CAACC,KAAK,IAAIE,GAAG,CAACH,CAAC,CAAC,CAACK,OAAO,CAACN,MAAM,KAAG,CAAC,EAAC;cAI7FnB,KAAK,CAACgC,GAAG,CAACC,GAAG,CAAC;gBAAC,WAAW,EAAChB,OAAO,CAACC,CAAC,CAAC,CAACG,KAAK;gBAAC,SAAS,EAACJ,OAAO,CAACC,CAAC,CAAC,CAACO,OAAO;gBAAC,MAAM,EAACR,OAAO,CAACC,CAAC,CAAC,CAACI,IAAI;gBAAC,SAAS,EAACL,OAAO,CAACC,CAAC,CAAC,CAACgB,QAAQ;gBAAC,UAAU,EAACjB,OAAO,CAACC,CAAC,CAAC,CAACiB,UAAU;gBAAC,MAAM,EAAClB,OAAO,CAACC,CAAC,CAAC,CAACkB,IAAI;gBAAC,QAAQ,EAAC,0DAA0D;gBAAC,QAAQ,EAAC;cAA2D,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;YAE3U;UACJ;QACJ;MAGA;IAOhB,CAAC;IACD/B,SAAS,CAAC,CAAC;EAGf,CAAC,CAAC;EACF,oBACIb,OAAA,CAAAE,SAAA;IAAA2C,QAAA,eAEA7C,OAAA;MAAA6C,QAAA,eACI7C,OAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACJ,CAAC;AAEX;AAAC7C,EAAA,CApGuBD,WAAW;AAAA+C,EAAA,GAAX/C,WAAW;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}